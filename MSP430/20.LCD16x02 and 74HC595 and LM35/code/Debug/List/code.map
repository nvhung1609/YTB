################################################################################
#                                                                              #
#      IAR Universal Linker V6.5.1.95                                          #
#                                                                              #
#           Link time     =  04/Nov/2023  20:43:22                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  "D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC5 #
#                            95 and LM35\code\Debug\List\code.map"             #
#           Output file 1 =  "D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC5 #
#                            95 and LM35\code\Debug\Exe\code.hex"              #
#                            Format: intel-extended                            #
#           Command line  =  -f C:\Users\PC\AppData\Local\Temp\EW49D9.tmp      #
#                            ("D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC #
#                            595 and LM35\code\Debug\Obj\lcd595.r43"           #
#                            "D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC5 #
#                            95 and LM35\code\Debug\Obj\lm35.r43"              #
#                            "D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC5 #
#                            95 and LM35\code\Debug\Obj\main.r43"              #
#                            -o                                                #
#                            "D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC5 #
#                            95 and LM35\code\Debug\Exe\code.hex"              #
#                            -Fintel-extended -l                               #
#                            "D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC5 #
#                            95 and LM35\code\Debug\List\code.map"             #
#                            -xms                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.0\430\LIB\"                             #
#                            -f                                                #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\config\linker\lnk430f2122.xcl"      #
#                            (-cmsp430 -QCODE_I=CODE_ID -QTLS16_I=TLS16_ID     #
#                            -Z(CONST)INFO=1000-10FF                           #
#                            -Z(CONST)INFOA=10C0-10FF                          #
#                            -Z(CONST)INFOB=1080-10BF                          #
#                            -Z(CONST)INFOC=1040-107F                          #
#                            -Z(CONST)INFOD=1000-103F                          #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,TLS16_I=0200-0 #
#                            3FF                                               #
#                            -Z(DATA)DATA16_HEAP+_DATA16_HEAP_SIZE             #
#                            -Z(DATA)CODE_I -Z(DATA)CSTACK+_STACK_SIZE#        #
#                            -Z(CONST)DATA16_C,DATA16_ID,TLS16_ID,DIFUNCT,CHEC #
#                            KSUM=F000-FFDD                                    #
#                            -Z(CODE)CSTART,ISR_CODE,CODE_ID=F000-FFDD         #
#                            -P(CODE)CODE=F000-FFDD                            #
#                            -Z(CONST)SIGNATURE=FFDE-FFDF                      #
#                            -Z(CODE)INTVEC=FFE0-FFFF                          #
#                            -Z(CODE)RESET=FFFE-FFFF) -D_STACK_SIZE=50         #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.0\430\lib\dlib\dl430fn.r43"               #
#                            -e_PrintfLarge=_Printf -e_ScanfLarge=_Scanf       #
#                            -D_DATA16_HEAP_SIZE=50 -s __program_start         #
#                            -D_DATA20_HEAP_SIZE=50)                           #
#                                                                              #
#                           Copyright (C) 1987-2016 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           F01C  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __core                     = 430
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __double_size              = 32
  __pic                      = no
  __reg_r4                   = free
  __reg_r5                   = free
  __rt_version               = 3

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0050 
           _STACK_SIZE             0050 
    *************************************************************************

  FILE NAME : D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC595 and LM35\code\Debug\Obj\lcd595.r43
  PROGRAM MODULE, NAME : lcd595

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0021 - 0021 (0x1 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   hc595_yaz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1OUT                0021 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1OUT                   0021 
           P1OUT_bit               0021 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0022 - 0022 (0x1 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   hc595_yaz
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1DIR                0022 
           LOCAL                   ADDRESS         
           =====                   =======         
           P1DIR                   0022 
           P1DIR_bit               0022 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F62C - F645 (0x1a bytes), align: 1
  Segment part 4.             Intra module refs:   lcd_init
                                                   lcd_temizle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay                   F62C 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F50A - F545 (0x3c bytes), align: 1
  Segment part 5.             Intra module refs:   lcd_init
                                                   lcd_putch
                                                   lcd_write
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           hc595_yaz               F50A 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F4C8 - F509 (0x42 bytes), align: 1
  Segment part 6.             Intra module refs:   lcd_goto
                                                   lcd_init
                                                   lcd_temizle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lcd_write               F4C8 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F3A2 - F3EF (0x4e bytes), align: 1
  Segment part 7.             Intra module refs:   lcd_puts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lcd_putch               F3A2 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F646 - F65F (0x1a bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lcd_puts                F646            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F688 - F695 (0xe bytes), align: 1
  Segment part 9.             Intra module refs:   lcd_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lcd_temizle             F688 
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F5A8 - F5D7 (0x30 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lcd_goto                F5A8            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F43C - F483 (0x48 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           lcd_init                F43C            main (main)
               calls direct
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F2F2 - F34F (0x5e bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           convert                 F2F2            main (main)
               calls direct

    *************************************************************************

  FILE NAME : D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC595 and LM35\code\Debug\Obj\lm35.r43
  PROGRAM MODULE, NAME : lm35

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 004A - 004A (0x1 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   init_lm35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10AE0                004A 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 01B0 - 01B1 (0x2 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   init_lm35
                                                   read_lm35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10CTL0               01B0 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 01B2 - 01B3 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   init_lm35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10CTL1               01B2 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 01B4 - 01B5 (0x2 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   read_lm35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADC10MEM                01B4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F608 - F62B (0x24 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_lm35               F608            main (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F484 - F4C7 (0x44 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_lm35               F484            main (main)
               calls direct

    *************************************************************************

  FILE NAME : D:\VIDEO\github_YTB\MSP430\20.LCD16x02 and 74HC595 and LM35\code\Debug\Obj\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0056 - 0056 (0x1 bytes), align: 0
  Segment part 1. ROOT        Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DCOCTL                  0056 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0057 - 0057 (0x1 bytes), align: 0
  Segment part 2. ROOT        Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BCSCTL1                 0057 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 3. ROOT        Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FE - 10FE (0x1 bytes), align: 0
  Segment part 4. ROOT        Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALDCO_1MHZ             10FE 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 10FF - 10FF (0x1 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CALBC1_1MHZ             10FF 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0200 - 0209 (0xa bytes), align: 0
  Segment part 9.             Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           arr                     0200 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F350 - F3A1 (0x52 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    F350            Segment part 19 (?cstart)
               calls direct
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F000 - F010 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   main
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F011 - F01B (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   main

    *************************************************************************

  FILE NAME : C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.0\430\lib\dlib\dl430fn.r43
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F696, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   F696            exit (?exit)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F696 - F699 (0x4 bytes), align: 1
  Segment part 6.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Relative segment, address: 03B0, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0200, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F01C - F01F (0x4 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         F01C            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           F01C 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F020 - F02B (0xc bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       F020            arr (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F02C - F033 (0x8 bytes), align: 1
  Segment part 19.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       F02C 
           ?cstart_end             F034 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 9 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F69A - F69D (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    F69A            Segment part 19 (?cstart)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Cast32f32i

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F274 - F2F1 (0x7e bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32uto32f           F274            read_lm35 (lm35)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Cast32fto32s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F546 - F577 (0x32 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Cast32fto32s           F546            read_lm35 (lm35)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_Extract

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F3F0 - F43B (0x4c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_Extract            F3F0            _Cast32fto32s (_Cast32fto32s)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Mul32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F164 - F273 (0x110 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Mul32f                 F164            read_lm35 (lm35)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : _Div32f

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F034 - F163 (0x130 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Div32f                 F034            read_lm35 (lm35)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Mul32

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F5D8 - F607 (0x30 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Mul32                  F5D8            delay (lcd595)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F660 - F677 (0x18 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16u              F660            ?DivMod16s (?DivMod816s)
                                                   convert (lcd595)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F578 - F5A7 (0x30 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod16s              F578            lcd_goto (lcd595)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F678 - F687 (0x10 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        F678            ?cstart_init_zero (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: F69E - F69F (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  F69E            Segment part 6 (?_exit)
                                                   _exit (?_exit)




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0021 - 0022               2   rel    0
                                       004A - 004A               1 
                                       0056 - 0057               2 
                                       0120 - 0121               2 
                                       01B0 - 01B5               6 
DATA16_I                                  0200                       dse    0
DATA16_Z                               0200 - 0209               A   rel    1
CSTACK                                 03B0 - 03FF              50   rel    1
DATA16_AN                              10FE - 10FF               2   rel    0
DATA16_C                               F000 - F01B              1C   rel    0
CSTART                                 F01C - F033              18   rel    1
<CODE> 1                               F034 - F69F             66C   rel    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 1 670 bytes of CODE  memory
    90 bytes of DATA  memory (+ 15 absolute )
    28 bytes of CONST memory

Errors: none
Warnings: none

